import React, { useState } from 'react';

const App = () => {
  // State hooks for managing new person's name, number, and list of persons
  const [newName, setNewName] = useState('');
  const [newNumber, setNewNumber] = useState('');
  const [persons, setPersons] = useState([
    { name: 'Arto Hellas', number: '1234567890', id: 1 } // Initial person in the phonebook
  ]);

  // Function to handle form submission and add a new person
  const addPerson = (event) => {
    event.preventDefault(); // Prevent default form submission behavior

    // Check if newName already exists in persons array
    if (persons.some(person => person.name === newName)) {
      alert(`${newName} is already added to the phonebook`); // Alert if duplicate name
      return; // Exit function if name already exists
    }

    // Create new person object with name, number, and unique id
    const personObject = {
      name: newName,
      number: newNumber,
      id: persons.length + 1 // Generate unique id based on current length of persons array
    };

    // Update persons state by concatenating new personObject
    setPersons(persons.concat(personObject));

    // Clear input fields by resetting newName and newNumber states
    setNewName('');
    setNewNumber('');
  };

  // Event handler to update newName state when input changes
  const handleNameChange = (event) => {
    setNewName(event.target.value); // Update newName state with input value
  };

  // Event handler to update newNumber state when input changes
  const handleNumberChange = (event) => {
    setNewNumber(event.target.value); // Update newNumber state with input value
  };

  // JSX rendering for the component
  return (
    <div>
      <h2>Phonebook</h2>
      <form onSubmit={addPerson}>
        <div>
          name: <input value={newName} onChange={handleNameChange} /> {/* Input field for name */}
        </div>
        <div>
          number: <input value={newNumber} onChange={handleNumberChange} /> {/* Input field for number */}
        </div>
        <div>
          <button type="submit">add</button> {/* Submit button to add new person */}
        </div>
      </form>
      <h2>Numbers</h2>
      <ul>
        {/* Mapping through persons array to display each person */}
        {persons.map(person =>
          <li key={person.id}>{person.name} {person.number}</li> // List item showing name and number
        )}
      </ul>
    </div>
  );
};

export default App;
