import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { configureStore, createSlice } from '@reduxjs/toolkit';
import { thunk } from 'redux-thunk'; // Corrected import
import { Provider } from 'react-redux';

// Slice for anecdotes
const anecdotesSlice = createSlice({
  name: 'anecdotes',
  initialState: [],
  reducers: {
    setAnecdotes: (state, action) => action.payload,
    addAnecdote: (state, action) => {
      state.push(action.payload);
    },
  },
});

const { setAnecdotes, addAnecdote } = anecdotesSlice.actions;

// Async action creator (thunk)
const fetchAnecdotes = () => async (dispatch) => {
  const response = await fetch('https://jsonplaceholder.typicode.com/posts');
  const data = await response.json();
  dispatch(setAnecdotes(data));
};

const store = configureStore({
  reducer: anecdotesSlice.reducer,
  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),
});

const App = () => {
  const dispatch = useDispatch();
  const anecdotes = useSelector((state) => state);

  useEffect(() => {
    dispatch(fetchAnecdotes());
  }, [dispatch]);

  const addNewAnecdote = () => {
    const newAnecdote = { id: anecdotes.length + 1, title: 'New Anecdote' };
    dispatch(addAnecdote(newAnecdote));
  };

  return (
    <div>
      <h1>Anecdotes</h1>
      <ul>
        {anecdotes.map((anecdote) => (
          <li key={anecdote.id}>{anecdote.title}</li>
        ))}
      </ul>
      <button onClick={addNewAnecdote}>Add Anecdote</button>
    </div>
  );
};

export default () => (
  <Provider store={store}>
    <App />
  </Provider>
);
