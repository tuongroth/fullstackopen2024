
import { useQuery, QueryClient, QueryClientProvider } from '@tanstack/react-query';
import axios from 'axios';

// Create a React Query Client
const queryClient = new QueryClient();

// Function to fetch anecdotes from the server
const getAnecdotes = async () => {
  const { data } = await axios.get('http://localhost:3001/anecdotes');
  return data;
};

// Component to display anecdotes
const AnecdoteList = () => {
  // Fetch anecdotes using useQuery
  const { data: anecdotes, error, isLoading, isError } = useQuery({
    queryKey: ['anecdotes'],
    queryFn: getAnecdotes,
    retry: 1,  // Retry fetching only once in case of error
  });

  // Display loading message while fetching
  if (isLoading) {
    return <div>Loading anecdotes...</div>;
  }

  // Display error message if fetching fails
  if (isError) {
    return <div>An error occurred: Anecdote service is not available due to problems in the server on localhost.</div>;
  }

  // Display the list of anecdotes if fetching is successful
  return (
    <div>
      <h1>Anecdotes</h1>
      <ul>
        {anecdotes.map(anecdote => (
          <li key={anecdote.id}>{anecdote.content}</li>
        ))}
      </ul>
    </div>
  );
};

// Root component wrapping the app in QueryClientProvider
const App = () => {
  return (
    <QueryClientProvider client={queryClient}>
      <AnecdoteList />
    </QueryClientProvider>
  );
};

export default App;
