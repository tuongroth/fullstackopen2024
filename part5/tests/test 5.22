const { test, expect, beforeEach, describe } = require('@playwright/test');

describe('Blog app', () => {
  beforeEach(async ({ page }) => {
    await page.goto('http://localhost:5173');
  });

  test('Login form is shown', async ({ page }) => {
    const loginButton = await page.locator('#login-button');
    await expect(loginButton).toBeVisible();
  });

  describe('Login', () => {
    test('succeeds with correct credentials', async ({ page }) => {
      await page.fill('#username', 'testuser');
      await page.fill('#password', 'testpassword');
      await page.click('#login-button');
      const logoutButton = await page.locator('button', { hasText: 'Logout' });
      await expect(logoutButton).toBeVisible();
    });

    test('fails with wrong credentials', async ({ page }) => {
      await page.fill('#username', 'wronguser');
      await page.fill('#password', 'wrongpassword');
      await page.click('#login-button');
      const errorMessage = await page.locator('text=Invalid credentials');
      await expect(errorMessage).toBeVisible();
    });
  });

  describe('When logged in', () => {
    beforeEach(async ({ page }) => {
      await page.fill('#username', 'testuser');
      await page.fill('#password', 'testpassword');
      await page.click('#login-button');
    });

    test('a new blog can be created', async ({ page }) => {
      await page.fill('#blog-title', 'Test Blog Title');
      await page.fill('#blog-author', 'Test Author');
      await page.click('#create-blog-button');

      const blogListItem = await page.locator('li', { hasText: 'Test Blog Title by Test Author' });
      await expect(blogListItem).toBeVisible();
    });

    test('a blog can be liked', async ({ page
